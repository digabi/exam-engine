@annotation-background: rgba(241, 34, 40, 0.2);
@annotation-background-selected: hsla(46, 85%, 64%, 0.5);

.e-annotation-wrapper {
  display: inline-block;
  position: relative;
  max-width: 100%;
}

.annotation-styles(@annotation-color) {
  background-color: @annotation-color;
  .e-annotation-wrapper {
    background: #fff;
    &:before {
      background: @annotation-color;
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      z-index: 1;
    }
  }
}

.e-annotation {
  background: @annotation-background;
  cursor: pointer;
  position: relative; // The index is positioned absolutely with respect to this element.

  &[data-hidden=''] {
    cursor: pointer;
  }

  &:hover {
    background: rgba(241, 34, 40, 0.3);
  }

  &.selected {
    background-color: @annotation-background-selected;
  }

  &[data-hidden='true'] {
    background: none;
    outline: none;

    sup.e-annotation {
      display: none;
    }
  }

  sup.e-annotation {
    // to make this "visible" for test
    width: 1px;
    height: 1px;
    position: absolute;
    font-size: 14px;
    font-weight: 600;

    &:after {
      line-height: 14px;
      position: absolute;
      margin-top: -0.5rem;
      content: attr(data-content);
      white-space: nowrap;
    }
  }

  // Below: styles created for the "old" annotation system â€” the one that renders them using vanilla JS.
  &--pregrading {
    .annotation-styles(rgba(241, 34, 40, 0.2));
  }

  &--censoring {
    .annotation-styles(rgba(28, 135, 177, 0.2));

    &:hover {
      background-color: rgba(28, 135, 177, 0.3);
    }
  }

  &--shape {
    position: absolute;
    min-width: 4px;
    min-height: 4px;
  }

  &__index {
    text-shadow: 1px 1px @colors[off-white];
  }

  &__index--text {
    position: relative;

    &::after {
      position: absolute;
      content: attr(data-content);
      white-space: nowrap;
      top: -0.125rem;
    }
  }

  &__index--shape {
    position: absolute;
    right: 0;
    top: -0.5rem;
    transform: translateX(100%);

    &::after {
      content: attr(data-content);
    }
  }
}
